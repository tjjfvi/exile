Nat = µ Nat ξ self
  λ(P: λ(n: Nat) *)
  λ(s: λ(n: Nat) (P (Nat.succ n)))
  λ(z: P (Nat.zero))
  (P self)
  
Nat.succ = λn λp λs λz (s n)

Nat.zero = λp λs λz z

Nat.add = λ(x: Nat) λ(y: Nat) (((x (λ_ Nat)) (λ_ Nat.succ)) y)

Nat.identity = @(x: Nat) (((x (@_ Nat)) Nat.zero) @w (Nat.succ w))
Nat.identity.type = @(x: Nat) Nat

CheckTerm = @p @s @z (((((Nat.succ (((Nat.zero p) s) z))) p) s) z)
CheckType = Nat

