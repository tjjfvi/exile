# λµξ reduction rules

x, y, z are arbitrary variables
a, b, c are arbitrary terms

[ (λx a) b ]
  let x = b
  a

[ (λ(x : a) b) c ]
  let x = c
  b

[ * : a ]
  [ * : [ a ] ]

[ * : * ]
  *

[ * : a ]
  !

[ λx a : * ]
  λx a

[ λ(x : a) b : * ]
  λ(x : a)
    let x = (x : a)
    [ b : * ]

[ a : λx b ]
  [ a : λ(x : *) b ]

[ λx a : λ(x : b) c ]
  λ(x : b)
    let x = (x : b)
    [ a : c ]

[ λ(x : a) b : λ(x : c) d ]
  λ[ (x : c) : a ]
    let x = (x : c)
    [ b : d ]

[ a b : c ]
  [ [ a : λ(_ : {b}) c ] b ]

[ a : µ x b ]
  let x = (x >= µ x b)
  [ a : b ]

[ a : ξ x b ]
  let x = a
  [ a : b ]

[ a : (x >= b) ]
  [ a : b ]

[ (x >= a) : b ]
  [ (x >= a) : [ b ] ]

[ (x >= a) : * ]
  (x >= a)

[ (x >= a) : b ]
  !

[ (a : b) : * ]
  [ a : b ]

[ (a : b) : c ]
  [ [ a : b ] : c ]

[ (a : λ(x : b) c) : λ(x : d) e ]
  [ a : λ[ (x : d) : b ] [ c : e ] ]
