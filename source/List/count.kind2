// Given a condition, verifies how many times that condition occurs
// Example: (List.count Nat [1,2,1,3,1,4] (Nat.equal 1)) -> 3
List.count <a> (xs: List a) (cond: a -> Bool) : Nat
List.count a (List.nil t)            cond = Nat.zero
List.count a (List.cons t head tail) cond = 
  let tail_count = List.count tail cond
  Bool.if (cond head) (Nat.succ tail_count) tail_count
