List.ifind <a> (f: a -> Nat -> Bool) (xs: List a) : Maybe (Pair a Nat) {
  List.ifind.go f xs Nat.zero
}

List.ifind.go <a> (f: a -> Nat -> Bool) (xs: List a) (idx: Nat) : Maybe (Pair a Nat)
List.ifind.go a f (List.nil  x.a)         idx = Maybe.none
List.ifind.go a f (List.cons x.a x.h x.t) idx =
  if (f x.h idx) {
    Maybe.some (Pair.new x.h idx)
  } else {
    List.ifind.go f x.t (Nat.succ idx)
  }