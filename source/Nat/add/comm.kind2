Nat.add.comm (a: Nat) (b: Nat) : Equal Nat (Nat.add a b) (Nat.add b a)
Nat.add.comm Nat.zero     b = Nat.add.comm.zero b
Nat.add.comm (Nat.succ a) b =
  // Goal: (b + a) + 1 == (a + (b + 1))
  // We know that a + b == b + a because of induction
  let induction = (Nat.add.comm a b)
  // (a + b) + 1 = (b + a) + 1
  let induction = Equal.apply (x => Nat.succ x) induction
  // (a + b) + 1 = (a + (b + 1))
  let induction_tool = Equal.mirror (Nat.add.comm.succ b a)
  // We can get our goal with this
  Equal.chain induction induction_tool

