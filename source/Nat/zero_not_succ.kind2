// Proof that zero is different to all other natural numbers
Nat.zero_not_succ <n: Nat> (e: Equal Nat Nat.zero (Nat.succ n)): Empty

Nat.zero_not_succ n e = 

	// If 0 = n + 1, then (0 == 0) = (n + 1 == 0), right?
	let e = Equal.apply (x => Nat.equal x Nat.zero) e

	// Due to the definition of Nat.equal, Kind2 turns this into Bool.true == Bool.false
	// This is false because of Bool.true_not_false
	Bool.true_not_false e
